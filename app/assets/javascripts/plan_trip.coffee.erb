#anything code related to trips/new and trips/edit should be put here.

markers = []
currentMarkerID = 0

$ ->

  #on click of the button, save the current trip
  $('#save-trip').click ->
    tripTitle = $('#trip_name_input').val()
    saveTrip(tripID, tripTitle)


  $(document).bind 'cbox_complete', ->
    initSearch() #calling initSearch because initial call didn't bind to lightbox input
    $('.add-destination-input').focus()

    # PRE: place should be defined from the autocomplete function
    # PRE: map should be initialized
    $('#add-destination-submit').click ->
      if $('.add-destination-input').val() == ''
        $('.lightbox-warning').remove()
        content = $('.lightbox-warning-template').clone().removeClass('hidden')
        content.removeClass('.lightbox-warning-template').addClass('lightbox-warning')
        content.find('#lightbox-warning-content').html('Please enter a destination.')
        content.insertBefore('#add-destination-lightbox-wrapper')
        $.colorbox.resize()
      else
        setTimeout ->
          $('.lightbox-warning').remove()
          content = $('.lightbox-warning-template').clone().removeClass('hidden')
          content.removeClass('.lightbox-warning-template').addClass('lightbox-warning')
          content.insertBefore('#add-destination-lightbox-wrapper')
          $.colorbox.resize()
        , 300



# PRE: place should be defined from the autocomplete function
# PRE: map should be initialized
#Parent function that should be called when a new destination is added to the map
addDestination = (place, map) ->
  if place != null
    markerID = addPlaceToMap(place, map)
    response = saveDestinationToDatabase(place)
    destinationID = response.responseText
    addDestinationSnapshot(place, markerID, destinationID)


generateMarkerID = ->
  return currentMarkerID++


#save trip to database, destination and details should already be in the database
saveTrip = (trip_id, trip_title) ->
  $.ajax '/trips/create',
    dataType: 'json'
    type: 'POST'
    data:
      trip_title: trip_title
      trip_id: trip_id
    success: (data) ->
      alert 'Successful'
      return
    failure: ->
      alert 'Unsuccessful'
      return



#add location to trip snapshot
#vars: place = google place object
#      map = google map object
addDestinationSnapshot = (place, markerID, destinationID) ->
  destinationName = place.name
  snapshot = $('#snapshot-location-template').clone().removeClass('hidden').removeAttr('id')
  #setting data needed for trip
  snapshot.find('h5').text(place.name)
  snapshot.attr('data-marker-id', markerID)
  snapshot.attr('data-destination-id', destinationID)
  snapshot.insertBefore('#snapshot-add-destination')

  snapshot.click ->
    info_content = getInfowindowContent(place)
    infowindow.setContent(info_content)
    infowindow.open(map, markers[markerID])

  snapshot.hover ->
    dragIndicator = snapshot.find('.snapshot-draggable-indicator')
    dragIndicator.toggleClass('hidden')
    dragIndicator.hover ->
      dragIndicator.parent().toggleClass('snapshot-location-shadow')

  $('#trip-snapshot-link-ul').append('<li></li>')



#returns the formatted infowindow content
getInfowindowContent = (place) ->
  iw = $('#infowindow-tempalte').clone().removeClass('hidden').removeAttr('id')
  iw.find('h5').text(place.formatted_address) #infowindow header
  return  iw.html()

#adds a marker at the geolocation specified in place (google place),
#on the map specified in map, connects path to previous marker if necessary
#PRE: bounds array must be declared
#@return markerID
addPlaceToMap = (place, map) ->
  markerID = generateMarkerID()
  marker = new google.maps.Marker
    position: place.geometry.location
    map: map
    title: place.formatted_address
    id: markerID

  #open infowindow on click
  marker.addListener 'click', ->
    infowindow.open(map, marker)

  #add position to the maps bounds
  bounds.extend marker.position

  markers[markerID] = marker
  polyline.getPath().setAt(markers.length - 1, marker.position);

  if markers.length == 1
    map.setCenter(marker.position)
    map.setOptions(zoom: 6)
  else
    map.fitBounds(bounds)

  #lastly, open window of place just added
  info_content = getInfowindowContent(place)
  infowindow.setContent(info_content)
  infowindow.open(map, marker)

  return markerID


#removes a marker with markerID from the map and markers array
removeMarker = (markerID, map) ->
  marker = markers[markerID]
  marker.setMap(null)
  polyline.getPath().removeAt(markerID)
  delete markers[markerID]


saveDestinationToDatabase = (place) ->
  $.ajax '/destinations',
    dataType: 'json'
    type: 'POST'
    data:
      place: JSON.stringify(place)
      trip_id: tripID
    success: (destinationID) ->
      return JSON.stringify(destinationID)
    failure: ->
      alert 'saveDestiantionToDatabase() Unsuccessful, please alert site admins'
      return

autocomplete = null
place = null
#autocomplete search box initialization
initSearch = ->
  autocomplete = new (google.maps.places.Autocomplete)(document.getElementById('location-query'), types: [ 'geocode' ])
  autocomplete.addListener 'place_changed', ->
    $('#lightbox-warning-template').hide()
    place = autocomplete.getPlace()
    addDestination(place, map)
    $.colorbox.close()

#anything code related to trips/new and trips/edit should be put here.

markers = []
currentMarkerID = 0

$ ->

  #on click of the button, save the current trip
  $('#save-trip').click ->
    tripTitle = $('#trip_name_input').val()
    saveTrip(tripID, tripTitle)


  $(document).bind 'cbox_complete', ->
    initSearch() #calling initSearch because initial call didn't bind to lightbox input

    # PRE: place should be defined from the autocomplete function
    # PRE: map should be initialized
    $('#add-destination-submit').click ->
      addPlaceToMap(place, map)
      saveDestinationToDatabase(place)


generateMarkerID = ->
  return currentMarkerID++


#save trip to database, destination and details should already be in the database
saveTrip = (trip_id, trip_title) ->
  $.ajax '/trips/create',
    dataType: 'json'
    type: 'POST'
    data:
      trip_title: trip_title
      trip_id: trip_id
    success: (data) ->
      alert 'Successful'
      return
    failure: ->
      alert 'Unsuccessful'
      return



#add location to trip snapshot
#vars: place = google place object
#      map = google map object
addDestinationToSnapshot = (place, map) ->
  destinationName = place.name
  snapshot = $('#snapshot-location-template').clone().removeClass('hidden')
  snapshot.find('h5').text(place.name)
  snapshot.insertBefore('#snapshot-add-destination')
  $('#trip-snapshot-link-ul').append('<li></li>')


#adds a marker at the geolocation specified in place (google place),
#on the map specified in map, connects path to previous marker if necessary
#PRE: bounds array must be declared
addPlaceToMap = (place, map) ->
  markerID = generateMarkerID()
  marker = new google.maps.Marker
    position: place.geometry.location
    map: map
    title: place.formatted_address
    id: markerID

  #TEST
  addDestinationToSnapshot(place, map)

  #add position to the maps bounds
  bounds.extend marker.position

  markers[markerID] = marker
  polyline.getPath().setAt(markers.length - 1, marker.position);

  if markers.length == 1
    map.setCenter(marker.position)
    map.setOptions(zoom: 6)
  else
    map.fitBounds(bounds)


#removes a marker with markerID from the map and markers array
removeMarker = (markerID, map) ->
  marker = markers[markerID]
  marker.setMap(null)
  polyline.getPath().removeAt(markerID)
  delete markers[markerID]


saveDestinationToDatabase = (place) ->
  $.ajax '/destinations',
    dataType: 'json'
    type: 'POST'
    data:
      place: JSON.stringify(place)
      trip_id: tripID
    success: (data) ->
      alert 'Successful'
      return
    failure: ->
      alert 'Unsuccessful'
      return
